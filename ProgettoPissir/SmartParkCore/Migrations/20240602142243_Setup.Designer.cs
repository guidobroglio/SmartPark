// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartParkCore.Data;

#nullable disable

namespace SmartParkCore.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240602142243_Setup")]
    partial class Setup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("SmartParkCore.Models.Pagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdUtente")
                        .HasColumnType("TEXT");

                    b.Property<float>("ImportoRicarica")
                        .HasColumnType("REAL");

                    b.Property<float>("ImportoSosta")
                        .HasColumnType("REAL");

                    b.Property<int>("VeicoloId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VeicoloId");

                    b.ToTable("Pagamenti");
                });

            modelBuilder.Entity("SmartParkCore.Models.Prenotazione", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataFine")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInizio")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdUtente")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Stato")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Prenotazioni");
                });

            modelBuilder.Entity("SmartParkCore.Models.Ricarica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataFine")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInizio")
                        .HasColumnType("TEXT");

                    b.Property<int>("PercentualeRicarica")
                        .HasColumnType("INTEGER");

                    b.Property<float>("PrezzoRicarica")
                        .HasColumnType("REAL");

                    b.Property<int>("VeicoloId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VeicoloId");

                    b.ToTable("Ricariche");
                });

            modelBuilder.Entity("SmartParkCore.Models.Sosta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataFine")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInizio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Durata")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("IdUtente")
                        .HasColumnType("TEXT");

                    b.Property<float>("PrezzoSosta")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Soste");
                });

            modelBuilder.Entity("SmartParkCore.Models.Utente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroCarta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Utenti");
                });

            modelBuilder.Entity("SmartParkCore.Models.Veicolo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CapacitaBatteria")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PercentualeBatteria")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Targa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UtenteId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UtenteId");

                    b.ToTable("Veicoli");
                });

            modelBuilder.Entity("SmartParkCore.Models.Pagamento", b =>
                {
                    b.HasOne("SmartParkCore.Models.Veicolo", "Veicolo")
                        .WithMany()
                        .HasForeignKey("VeicoloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veicolo");
                });

            modelBuilder.Entity("SmartParkCore.Models.Ricarica", b =>
                {
                    b.HasOne("SmartParkCore.Models.Veicolo", "Veicolo")
                        .WithMany()
                        .HasForeignKey("VeicoloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veicolo");
                });

            modelBuilder.Entity("SmartParkCore.Models.Veicolo", b =>
                {
                    b.HasOne("SmartParkCore.Models.Utente", null)
                        .WithMany("Veicoli")
                        .HasForeignKey("UtenteId");
                });

            modelBuilder.Entity("SmartParkCore.Models.Utente", b =>
                {
                    b.Navigation("Veicoli");
                });
#pragma warning restore 612, 618
        }
    }
}
